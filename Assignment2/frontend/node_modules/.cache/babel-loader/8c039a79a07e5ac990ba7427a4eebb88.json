{"ast":null,"code":"var _jsxFileName = \"/home/swastik/Desktop/DASS/Assignment2/frontend/src/components/order.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, Card, Button, Form, Modal, ButtonToolbar } from 'react-bootstrap';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nexport default class vendor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      arr: {},\n      len1: 0,\n      product: {},\n      len2: 0,\n      modal14: false\n    };\n    this.getDetails = this.getDetails.bind(this);\n    this.edit = this.edit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDetails();\n    this.interval = setInterval(() => {\n      this.getDetails();\n    }, 3000);\n  }\n\n  getDetails() {\n    axios.get('http://localhost:4000/order/' + this.state.id).then(res => {\n      this.setState({\n        arr: res.data\n      });\n      this.setState({\n        len1: res.data.length\n      }); // console.log('arr')\n      // console.log(this.state.arr)\n    });\n    axios.get('http://localhost:4000/list').then(res => {\n      this.setState({\n        product: res.data\n      });\n      this.setState({\n        len2: res.data.length\n      }); // console.log('product')\n      // console.log(this.state.product)\n\n      this.render();\n    });\n  }\n\n  edit(e, index) {\n    let inputvalue = prompt('Enter the quantity u want to order !');\n    console.log('index array');\n    console.log(index);\n\n    if (inputvalue > this.state.arr[index[0]].quantity + this.state.product[index[1]].quantity) {\n      alert('Enter a valid input');\n    } else {\n      const q = this.state.arr[index[0]].quantity + this.state.product[index[1]].quantity; // console.log('input')\n      // console.log(inputvalue)\n\n      let newarr = this.state.arr;\n      newarr[index[0]].quantity = inputvalue;\n      this.setState({\n        arr: newarr\n      }); // console.log('q')\n      // console.log(q)\n\n      newarr = this.state.product;\n      newarr[index[1]].quantity = q - inputvalue;\n      this.setState({\n        product: newarr\n      });\n      const data = {\n        doc_id: this.state.product[index[1]]._id,\n        quantity: q,\n        value: inputvalue\n      };\n      const newdata = {\n        doc_id: this.state.arr[index[0]]._id,\n        value: inputvalue\n      };\n      axios.post('http://localhost:4000/list/update', data).then(res => console.log(res.data));\n      axios.post('http://localhost:4000/order/update', newdata).then(res => console.log(res.data));\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let array = [];\n\n    for (var i = 0; i < this.state.len1; i++) {\n      let but = '';\n      const index = [];\n      let stat = 'Waiting';\n      let k = 0;\n\n      for (; k < this.state.len2; k++) {\n        if (this.state.arr[i].pid == this.state.product[k]._id) {\n          // console.log('shit')\n          break;\n        }\n      }\n\n      if (k == this.state.len2 && k == 0) continue; // console.log(k)\n\n      if (k == this.state.len2) {\n        stat = 'Product has been deleted by vendor';\n        array.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Order \", i + 1), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Order Details\"), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Status : \", stat)))));\n        continue;\n      }\n\n      if (this.state.product[k].quantity == 0) stat = 'Placed';\n      if (this.state.product[k].status == \"Dispatched\") stat = 'Dispatched';\n      if (this.state.arr[i].cancel == 1) stat = 'Canceled';\n      index[0] = i;\n      index[1] = k;\n      if (stat == 'Waiting') but = React.createElement(Button, {\n        variant: \"primary\",\n        onClick: e => this.edit(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Edit\");\n      array.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Order \", i + 1), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Order Details\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Product name:\", this.state.product[k].productname, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), \"Vendor name:\", this.state.product[k].username, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), \"Quantity ordered:\", this.state.arr[i].quantity, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Quantity Remaining: \", this.state.product[k].quantity, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"Status : \", stat), but))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, array);\n  }\n\n}","map":{"version":3,"sources":["/home/swastik/Desktop/DASS/Assignment2/frontend/src/components/order.js"],"names":["Navbar","Nav","NavItem","NavDropdown","MenuItem","Card","Button","Form","Modal","ButtonToolbar","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","React","Component","BrowserRouter","Router","Route","Link","Redirect","axios","vendor","constructor","props","toggle","nr","modalNumber","setState","state","id","match","params","arr","len1","product","len2","modal14","getDetails","bind","edit","componentDidMount","interval","setInterval","get","then","res","data","length","render","e","index","inputvalue","prompt","console","log","quantity","alert","q","newarr","doc_id","_id","value","newdata","post","componentWillUnmount","clearInterval","array","i","but","stat","k","pid","push","status","cancel","productname","username"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem ,Card,Button,Form,Modal,ButtonToolbar} from 'react-bootstrap';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Link,Redirect } from \"react-router-dom\"\nimport axios from 'axios';\n\nexport default class vendor extends Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            id:this.props.match.params.id,\n            arr:{},\n            len1:0,\n            product:{},\n            len2:0,\n            modal14: false\n        }\n        \n        this.getDetails=this.getDetails.bind(this)\n        this.edit=this.edit.bind(this)\n      \n    }\n    componentDidMount(){\n        this.getDetails();\n        this.interval = setInterval(() => {\n            this.getDetails();\n          }, 3000);\n\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n          [modalNumber]: !this.state[modalNumber]\n        });\n      }\n    getDetails(){\n        axios.get('http://localhost:4000/order/'+this.state.id)\n        .then(res=>{\n            this.setState({arr:res.data})\n            this.setState({len1:res.data.length})\n            // console.log('arr')\n            // console.log(this.state.arr)\n        })\n        axios.get('http://localhost:4000/list')\n        .then(res=>{\n            this.setState({product:res.data})\n            this.setState({len2:res.data.length})\n\n            // console.log('product')\n            // console.log(this.state.product)\n            this.render()\n        })\n\n    }\n\n      \n    edit(e,index){\n        let inputvalue=prompt('Enter the quantity u want to order !')\n        console.log('index array')\n        console.log(index)\n        if(inputvalue>(this.state.arr[index[0]].quantity+this.state.product[index[1]].quantity))\n        {\n            alert('Enter a valid input')\n        }\n        else{\n            const q=this.state.arr[index[0]].quantity+this.state.product[index[1]].quantity\n            // console.log('input')\n            // console.log(inputvalue)\n            let newarr=this.state.arr;\n            newarr[index[0]].quantity=inputvalue\n            this.setState({arr:newarr})\n            \n            \n            \n            // console.log('q')\n            // console.log(q)\n            \n           \n            newarr=this.state.product\n            newarr[index[1]].quantity=q-inputvalue\n            this.setState({product:newarr})\n           \n            const data={\n                doc_id:this.state.product[index[1]]._id,\n                quantity:q,\n                value:inputvalue\n            }\n            const newdata={\n                doc_id:this.state.arr[index[0]]._id,\n                value:inputvalue\n            }\n            axios.post('http://localhost:4000/list/update', data)\n            .then(res=>console.log(res.data))\n            axios.post('http://localhost:4000/order/update',newdata)\n            .then(res=>console.log(res.data))\n        }\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    render()\n    {   \n        let array=[]\n    \n            for(var i=0;i<this.state.len1;i++){\n                let but=''\n                const index=[];\n                let stat='Waiting'\n                let k=0;\n                for(;k<this.state.len2;k++)\n                {\n                    if(this.state.arr[i].pid==this.state.product[k]._id)\n                    {\n                        // console.log('shit')\n                        break\n                    }\n\n                }\n                if(k==this.state.len2 && k==0 )\n                continue\n                // console.log(k)\n            if(k==this.state.len2){\n                stat='Product has been deleted by vendor'\n                array.push(\n                    <div>\n                    <Card>\n                    <Card.Header>Order {i+1}</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Order Details</Card.Title>\n                        <Card.Text>\n                        \n                        Status : {stat}\n                        </Card.Text>\n                        \n                    </Card.Body>\n                    </Card>\n                    </div>\n                )\n                continue\n            }\n            if(this.state.product[k].quantity==0)\n                stat='Placed'\n            if(this.state.product[k].status==\"Dispatched\")\n                stat='Dispatched'\n            if(this.state.arr[i].cancel==1)\n                stat='Canceled'\n            \n            index[0]=i;index[1]=k;\n            if(stat=='Waiting')\n                but=<Button variant=\"primary\" onClick={(e)=>this.edit(e,index)}>Edit</Button>\n\n                array.push(\n                <div>\n                <Card>\n                <Card.Header>Order {i+1}</Card.Header>\n                <Card.Body>\n                    <Card.Title>Order Details</Card.Title>\n                    <Card.Text>\n                    Product name:{this.state.product[k].productname}\n                    <br/>\n                    Vendor name:{this.state.product[k].username}\n                    <br/>\n                    Quantity ordered:{this.state.arr[i].quantity}\n                    <br/>\n                    Quantity Remaining: {this.state.product[k].quantity}\n                    <br/>\n                    Status : {stat}\n\n                    </Card.Text>\n                    {but}\n                   \n                </Card.Body>\n                </Card>\n                </div>\n            )\n        }\n        \n        return(\n            <div>\n            \n            {array}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}